#include <stdio.h>
#include <stdlib.h>
#define SIZE 50

int r=-1,f=-1,ar[SIZE];
int val;
int isfull()
{
    if(r==SIZE-1)
       return 1;
    else
       return 0;
}

int isempty()
{
    if(f==-1 && r==-1)
       return 1;
    else
       return 0;
}
int check (int x)
{
    int p;
    for(int i=f; i<=r; i++)
    {
        if(x<=ar[i]){
            p=i;
        }
        else{
            p=r;
        }
    }
    return p;
}

void enqueue()
{
    if(isfull()){
        printf("queue is full");
    }
    else if(isempty())
    {
        f=0;
        r=0;
        printf("enter element");
        scanf("%d",&val);
        ar[f]=val;
    }
    else{
        printf("enter element");
        scanf("%d",&val);
        int pr=check(val);
        for(int j=r; j>=pr; j--){
            ar[j+1]=ar[j];
        }
        ar[pr]=val;
    }
    r++;
}

void dequeue()
{
    if(isempty()){
        printf("queue is empty");
        }
    else if((f==r))
        {
            printf("%d is qedueued",ar[f]);
            r=f=-1;
        }
    else{
        printf("%d is qedueued",ar[f]);
        f=f+1;
    }
}

void display()
{
    if(isempty())
      printf("no element to display");
    else
      for(int i=f;i<=r;i++)
          {
        printf("\n%d",ar[i]);
        }
}
int main()
{   
    int ch;
    printf("\nenetr \n1 to enqueue \n2 to dequeu \n3 to display \n0 to exit");
    while(1)
    {
       printf("\nchoice:");
       scanf("%d",&ch);
       switch(ch)
       {
           case 1:
           enqueue();
           break;
           case 2:
           dequeue();
           break;
           case 3:
           display();
           break;
           case 0:
           exit(0);
           default:
           printf("invalid choice entry");
           break;
       }
    }
return 0;
}
